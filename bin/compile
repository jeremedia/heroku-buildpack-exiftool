#!/usr/bin/env bash
# bin/compile BUILD_DIR CACHE_DIR ENV_DIR

arrow() {
  sed -u 's/^/-----> /'
}
indent() {
  sed -u 's/^/       /'
}

    BUILD_DIR=$1
    CACHE_DIR=$2
BUILDPACK_DIR=`cd $(dirname $0)/..; pwd`

# extract url of latest production version from the rss feed
RSSFEED_URL="http://owl.phy.queensu.ca/~phil/exiftool/rss.xml"
# TARBALL_URL is hardcoded because rss.xml gives no tarball URL for the production release right now...
#TARBALL_URL="$(curl -s -o - "$RSSFEED_URL" | perl -ne 'if (!$got && (/\<title\>.+production release.+\<\/title\>/i .. /\<\/item\>/) && /enclosure.+(http.+\.tar\.gz)/) {print $1; $got = 1}')"
TARBALL_URL="https://sno.phy.queensu.ca/~phil/exiftool/Image-ExifTool-11.92.tar.gz"
 RENAME_DIR="$(echo "$TARBALL_URL" | perl -ne '/.+\/(.+)\.tar\.gz/ && print $1')"
 VERSION_NO="$(echo "$RENAME_DIR"  | perl -ne '/ExifTool-(.+)$/i   && print $1')"

PROFILE_PATH="$BUILD_DIR/.profile.d"
 TARGET_PATH="$BUILD_DIR/vendor"
 VENDOR_PATH="/app/vendor"

echo "Installing exiftool $VERSION_NO" | arrow
mkdir -p "$TARGET_PATH"
cd       "$TARGET_PATH"
echo $TARGET_PATH
# download and unpack
echo "Fetching   $TARBALL_URL" | indent
curl --fail --retry 3 --retry-delay 1 --connect-timeout 3 "$TARBALL_URL" -s -o - | tar xzf -

# configure path
mkdir -p    "$PROFILE_PATH"
cat <<EOF > "$PROFILE_PATH/exiftool.sh"
export PATH="$VENDOR_PATH/exiftool:\$PATH"
EOF

# show installed version
mv "$RENAME_DIR" exiftool
cd             ./exiftool
echo "Installed: "`ls exif*` | indent
echo
